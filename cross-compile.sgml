<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN" [
  <!ENTITY applname "cross-compile">
  <!ENTITY revision "$Revision: 2.0.0">
  <!ENTITY man_dpkg-cross "<citerefentry><refentrytitle>dpkg-cross</refentrytitle><manvolnum>1</manvolnum></citerefentry>, <citerefentry><refentrytitle>Debian::DpkgCross</refentrytitle>
    <manvolnum>3</manvolnum></citerefentry>">
  <!ENTITY man_cross-compile "<citerefentry><refentrytitle>cross-compile</refentrytitle><manvolnum>5</manvolnum></citerefentry>">
  <!ENTITY dpkg-cross "<application>dpkg-cross</application>">
  <!ENTITY dpkg-buildpackage "<application>dpkg-buildpackage</application>">
  <!ENTITY dpkg-shlibdeps "<application>dpkg-shlibdeps</application>">
  <!ENTITY gccross "<application>gccross</application>">
  <!ENTITY readme-debian "<filename>/usr/share/doc/dpkg-cross/README.Debian.gz</filename>">
  <!ENTITY seealso "&man_dpkg-cross;, &man_cross-compile;, &readme-debian;">
  <!ENTITY year "2007">
  <!ENTITY username "Roman Hodek">
  <!ENTITY useremail "<email>&lt;debian-embedded@lists.debian.org&gt;</email>">
]>
<refentry>
  <refmeta>
    <refentrytitle>cross-compile</refentrytitle>
    <manvolnum>5</manvolnum>
  </refmeta>
  <refnamediv>
    <refname>&applname;</refname>
    <refpurpose>Configuration for dpkg-cross and relatives</refpurpose>
  </refnamediv>
  <refsect1>
    <title>DESCRIPTION</title>
    <para>This file defines some settings for &dpkg-cross; but many values 
    are unused in the general case.</para>
    <para>Settings in the system path 
    file <filename>/etc/dpkg-cross/cross-compile</filename> can 
    be overridden by an optional file in your home directory:
    <filename>$HOME/.dpkg-cross/cross-compile</filename>. 
    </para>
    <para>The configuration file syntax has been significantly relaxed since
    version 1.39. Comments start with a '#' and continue to the end of the line. 
    Comments are allowed on their own lines or after variable definitions.
    Variable definitions have the general form:
      <blockquote><para>varname = value
        </para></blockquote>
      </para>
    <para>Prior to v2.0.0, &dpkg-cross; diverted &dpkg-buildpackage; and
    &dpkg-shlibdeps; from dpkg-dev and used lots of settings in this file to
    modify that behaviour. In v2.0.0, these diversions have been removed and
    the main elements of the diversions implemented in dpkg-dev itself. The old
    diversion scripts are retained in &dpkg-cross; but are no longer called
    in normal usage. Settings that are affected by this change are listed in
    the "Legacy" section.
    </para>
    <para>Scripts using the <filename>Debian::DpkgCross</filename> module
    can define their own options to be set in this file and are free to use
    the existing settings in any suitable way. All options are available via the
    <emphasis>read_config</emphasis> function in the module.
    </para>
    <para>The following variables are recognised by default by &dpkg-cross; and 
    can be specified in any order. Only <option>default_arch</option> is 
    used routinely.</para>
    <variablelist>
      <varlistentry>
        <term>default_arch (default: none)</term>
        <listitem>
          <para>The default architecture for &dpkg-cross; is normally set by
          debconf. To change the system-wide value, use</para>
          <blockquote>
          <para>$ sudo dpkg-reconfigure dpkg-cross</para>
          </blockquote>
          <para>
          Alternatively, the default can be overridden on a per-user basis using
          the optional file in <filename>$HOME/.dpkg-cross/</filename>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>crossbase (default: /usr)</term>
	<listitem>
	  <para>This is the path prefix for all other cross compiling paths below. It
            is used in their default definition, but a user definition need not
            necessarily use it.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term>crossdir (default: $(CROSSBASE)/$(DEB_HOST_GNU_TYPE))</term>
	<listitem>
	  <para>This is the base directory for a specific architecture.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term>crossbin (default: $(CROSSDIR)/bin)</term>
	<listitem>
	  <para>This directory contains binaries for cross compiling (<application>gcc</application>,
	    <application>as</application>, <application>ld</application>, ...).
	    It's mainly intended for refering to, but &dpkg-shlibdeps; also
            uses it as one alternative to locate a <application>objdump</application> that
	    can parse objects of the architecture in question.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term>crosslib (default: $(CROSSDIR)/lib or $(CROSSROOT)/lib, resp.)</term>
	<listitem>
	  <para>This directory contains libraries and other linker support files (e.g.
            <filename>crt1.o</filename>) for cross compiling. The setting is used by
	    &dpkg-cross; as place where to install files from usual <filename>/lib</filename>,
	    <filename>/usr/lib</filename>, and <filename>/usr/X11R6/lib</filename>. Also
	    &dpkg-shlibdeps; expects target arch libraries in this directory. This is
	    specially important if <quote>$(CROSSROOT)</quote> is defined.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term>crosslib64 (default: $(CROSSLIB)64)</term>
	<listitem>
	  <para>On targets that have both 32bit and 64bit variants, this directory
	    contains 64bit versions of libraries and other linker support files. This
	    setting is used by &dpkg-cross; as place where to install files from
	    <filename>/lib64</filename>, <filename>/usr/lib64</filename>, and
	    <filename>/usr/X11R6/lib64</filename>. Note that this setting is NOT used for
	    64bit-only targets (such as <quote>ia64</quote>).</para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term>crossinc (default: $(CROSSDIR)/include)</term>
	<listitem>
	  <para>This directory contains headers for cross compiling. The setting is
            used by &dpkg-cross; as place where to install files from usual
            <filename>/usr/include</filename> and <filename>/usr/X11R6/include</filename>.
	    Unused if <quote>$(CROSSROOT)</quote> is defined.</para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term>crossprefix (default: $(CPU)-$(OS)-)</term>
	<listitem>
	  <para>This is the prefix for cross compiling binaries, like
	    <application>gcc</application>. The default naming is GNU convention, e.g.
	    you could have <application>m68k-linux-gcc</application> in your PATH.
	    It is mainly intended for refering to, but &dpkg-shlibdeps; also
            uses it as one alternative to locate a objdump that can parse objects
            of the architecture in question (it tries <quote>$(CROSSPREFIX)objdump</quote>).</para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term>removedeps</term>
	<listitem>
	  <para>This variable defines comma-separated list of package names that
            should be removed from any dependency fields (Depends:, Conflicts:, etc)
            of the generated packages. This is useful when the original native package
            depends on packages like <application>xfree86-common</application> or
	    <application>gpm</application>, that are of no value for cross-compilation.
	  </para>
	  <para>This option has been largely superceded by 
	  the <option>-X</option>|<option>--exclude</option> support in &dpkg-cross; itself.
	  </para>
	</listitem>
      </varlistentry>
      <varlistentry>
        <term>keepdeps</term>
	<listitem>
	  <para>This variable defines comma-separated list of package names that
            should be kept as is, without adding <emphasis>-arch-cross</emphasis> suffix,
            in all dependency fields (Depends:, Conflicts:, etc) of the generated
            packages. This is useful for packages like <application>bison</application>,
	    when host version of package can satisfy the dependency.</para>
	  <para>This option has been largely superceded by 
	  the <option>-X</option>|<option>--exclude</option> support in &dpkg-cross; itself.
	  </para>
	</listitem>
      </varlistentry>
    </variablelist>
    </refsect1>
    <refsect1>
    <title>Legacy options</title>
    <para>Other values previously used in this file are now largely legacy code 
    that are retained for use with the old scripts 
    from <filename>/usr/share/dpkg-cross/</filename>.
    </para>
    <variablelist>
      <varlistentry>
        <term>crossroot-arch (default: none)</term>
        <listitem>
          <para>If <replaceable>arch</replaceable> matches the current target architecture (selected by a
            <option>-a</option> option), then this definition of <quote>$(CROSSROOT)</quote> will
            take place. It tells &dpkg-cross; that there is a complete Debian installation for the
            target arch mounted somewhere, in the path which is the value of the
            definition. If a <quote>$(CROSSROOT)</quote> definition is active, some of the other
            variables change their meaning. For a complete description, best refer
            to &readme-debian;.</para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>compilerpath (default: /bin:/usr/bin)</term>
	<listitem>
	  <para>This variable defines colon-separated list of directories where &gccross; search
	    for compilers.</para>
	</listitem>
      </varlistentry>
    </variablelist>
    <para>The variables <quote>$(CPU)</quote> and <quote>$(OS)</quote> mentioned above
      sometimes are derived from the current target architecture <quote>$(ARCH)</quote>.
      If that one does not contain a dash ('-'), it's assumed to be <quote>$(CPU)</quote> and
      <quote>$(OS)</quote> to be <quote>linux</quote>. However, if the architecture string
      starts with <quote>hurd-</quote> or end in <quote>-gnu</quote>, the <quote>$(OS)</quote> part
      will be <quote>gnu</quote>, the <quote>$(CPU)</quote> the rest before or after the OS.</para>
    <para>Additional variables may be defined for the legacy &dpkg-buildpackage; wrapper.</para>
    <important>
    <title>Makeflags are disabled in 2.0.0</title>
    <para>The old behaviour of overriding all <option>MAKEFLAGS</option> within 
    a build has been abandoned. <option>MAKEFLAGS</option> should not be overridden
    as it compromises the intended behaviour of &dpkg-cross; by preventing build
    tools from being compiled with the native compiler, causing builds to fail
    when the executable is run after being compiled under the cross-compiler as
    dictated by the incorrect MAKEFLAGS. Packages that cross-built with MAKEFLAGS 
    but which fail to cross-build without it should be patched.
    </para>
    </important>
    <para>Old style 'environment' variables can still be set using the same
    syntax as all other variables in the file and can be exported to the 
    environment when using the legacy scripts. This is a change from previous
    behaviour.</para>
  </refsect1>
  <refsect1>
    <title>VARIABLE UNSETTING</title>
    <para>Unlike previous versions, any variable can be unset in the same file or in
    the user-specific file after being set in the system file. Simply provide an
    empty value.
    </para>
  </refsect1>
  <refsect1>
    <title>FILES</title>
    <para><filename>$HOME/.dpkg-cross/cross-compile</filename>, <filename>/etc/dpkg-cross/cross-compile</filename></para>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>
    <para>&seealso;</para>
  </refsect1>
  <refsect1>
    <title>AUTHOR</title>
    <para>&username; &useremail;</para>
    <para>Neil Williams <email>&lt;codehelp@debian.org&gt;</email></para>
  </refsect1>
  <refsect1>
    <title>VERSION</title>
    <para>&revision;</para>
  </refsect1>
  <refsect1>
    <title>COPYRIGHT</title>
    <para>Copyright &copy; &year; &username; &useremail;</para>
    <para>Copyright &copy; 2007 Neil Williams <email>&lt;codehelp@debian.org&gt;</email>
    </para>
    <para>
      This program is free software; you can redistribute it and/or modify
      it under the terms of the GNU General Public License as published by
      the Free Software Foundation; either version 2 of the License, or
      (at your option) any later version.</para>
  </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:2
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:nil
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
